# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
 batch: true
 branches:
   include:
     - AzureDevopsRepo
 paths:
   exclude:
     - azure-pipelines.yml
     - pom.xml

pool:
  vmImage: ubuntu-latest
variables:
 - group: Build-Variable-Group
 - name: MAVEN_CACHE_FOLDER
   value: $(Pipeline.Workspace)/.m2/repository
 - name: MAVEN_OPTS
   value: 'iDmaven.repo.local-$(MAVEN_CACHE_FOLDER)'

steps:

- task: CacheBeta@0
  inputs:
   key: $(Build.SourceDirectory)/pom.xml
   path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo
- task: DownloadSecureFile@1
  name: settingsxml
  inputs:
   secureFile: 'settings.xml'

- task: PowerShell@2
  inputs:
   targetType: 'inline'
   script: |
     New-Item -Type Directory -Force "${HOME}/.m2"
     Copy-Item -Force "$(settingxml.secureFilePath)" "${HOME}/.m2/settings.xml"
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean package deploy $(MAVEN_OPTS) -DmuleDeploy -Dserver=$(server) -DmuleVersion=$(muleVersion) -DapplicationName=$(applicationName) -Denvironment=$(environment) -Dworkers=$(workers) -DworkerType=$(workerType)'
